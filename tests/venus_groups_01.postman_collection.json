{
	"info": {
		"_postman_id": "2b9ab22a-d1bd-405c-96e4-8e023f0a7080",
		"name": "venus_groups_01",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "userVerify-admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var userrole = jsonData.content.idToken.payload.primaryRole;\r",
							"pm.environment.set(\"accessToken\", jsonData.content.accessToken.jwtToken);\r",
							"if(userrole==\"admin\"){\r",
							"    pm.environment.set(\"adminToken\", jsonData.content.idToken.jwtToken);\r",
							"}\r",
							"pm.environment.set(\"token\", jsonData.content.idToken.jwtToken);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"check message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"success\");\r",
							"});\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"postman.setNextRequest(\"createOrganizationGroup\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"rachini.perera@1billiontech.com\",\n    \"userPassword\": \"RBFyfz720%*$\" \n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{userBaseURL}}/{{env}}/tpip/v2/user/verify",
					"protocol": "https",
					"host": [
						"{{userBaseURL}}"
					],
					"path": [
						"{{env}}",
						"tpip",
						"v2",
						"user",
						"verify"
					]
				},
				"description": "This API uses to sign in."
			},
			"response": []
		},
		{
			"name": "createOrganizationGroup",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"check success message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"Group created successfully.\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 3210ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3210);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"check whether the group id is exists\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.content).to.have.property('groupId');\r",
							"});\r",
							"\r",
							"var issues = JSON.parse(responseBody);\r",
							"var schema = {\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
							"    \"$id\": \"http://example.com/example.json\",\r",
							"    \"type\": \"object\",\r",
							"    \"items\": [\r",
							"        {\r",
							"            \"result\": \"boolean\",\r",
							"            \"message\": \"string\",\r",
							"            \"content\": {\r",
							"                \"groupId\": \"integer\"\r",
							"            }\r",
							"        }\r",
							"    ],\r",
							"    \"required\": [\r",
							"        \"result\",\r",
							"        \"message\",\r",
							"        \"content\"\r",
							"    ],\r",
							"    \"type\": \"object\",\r",
							"    \"properties\": {\r",
							"        \"result\": {\r",
							"           \r",
							"            \"type\": \"boolean\",\r",
							"          \r",
							"        },\r",
							"        \"message\": {\r",
							"          \r",
							"            \"type\": \"string\",\r",
							"            \"examples\": [\r",
							"                \"Group created successfully.\"\r",
							"            ]\r",
							"        },\r",
							"        \"content\": {\r",
							"            \"$id\": \"#/properties/content\",\r",
							"            \"type\": \"object\",\r",
							"            \"examples\": [\r",
							"                {\r",
							"                    \"groupId\": 2495\r",
							"                }\r",
							"            ],\r",
							"            \"required\": [\r",
							"                \"groupId\"\r",
							"            ],\r",
							"            \"properties\": {\r",
							"                \"groupId\": {\r",
							"                    \"$id\": \"#/properties/content/properties/groupId\",\r",
							"                    \"type\": \"integer\",\r",
							"                    \"examples\": [\r",
							"                        2495\r",
							"                    ]\r",
							"                }\r",
							"            },\r",
							"            \"additionalProperties\": true\r",
							"        }\r",
							"    },\r",
							"    \"additionalProperties\": true\r",
							"}\r",
							"tests[\"Valid schema\"] = tv4.validate(issues, schema);\r",
							"console.log(tv4.error);\r",
							"\r",
							"postman.setNextRequest(\"createSchemeGroup\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"//pm.environment.set(\"name4\",\"\\\"\"+data.CreateGrpName+\"\\\"\");\r",
							"pm.variables.set(\"name4\", \"\\\"\"+pm.variables.replaceIn('{{$randomWord}}')+\"\\\"\");\r",
							"//pm.variable.set(\"name4\", \"test group2\");\r",
							"//pm.variables.set(\"orgId\",\"\\\"\"+data.orgId+\"\\\"\");\r",
							"pm.variables.set(\"orgId\",1);\r",
							"//pm.variables.set(\"type4\",\"\\\"\"+data.CreateGrpUserType+\"\\\"\");\r",
							"pm.variables.set(\"type4\",\"platformAdmin\");\r",
							"\r",
							"pm.variables.set(\"claims4\",[\"cl-a-28\",\"cl-a-27\"]);\r",
							"var claimList4 = pm.variables.get(\"claims4\");\r",
							"var stringList = \"\";\r",
							"for(var i=0;i<claimList4.length;i++){\r",
							"    if(i==0){\r",
							"stringList= \"\\\"\"+claimList4[i]+\"\\\"\"\r",
							"    }else{\r",
							"stringList= \"\\\"\"+claimList4[i]+\"\\\",\"+stringList;\r",
							"    }\r",
							"}\r",
							"//console.log(stringList)\r",
							"pm.variables.set(\"claims4\",stringList);\r",
							"\r",
							"pm.variables.set(\"notifications4\",[\"N84\",\"N152\"]);\r",
							"var notificationList4 = pm.variables.get(\"notifications4\");\r",
							"var stringList = \"\";\r",
							"for(var i=0;i<notificationList4.length;i++){\r",
							"    if(i==0){\r",
							"stringList= \"\\\"\"+notificationList4[i]+\"\\\"\"\r",
							"    }else{\r",
							"stringList= \"\\\"\"+notificationList4[i]+\"\\\",\"+stringList;\r",
							"    }\r",
							"}\r",
							"//console.log(stringList)\r",
							"pm.variables.set(\"notifications4\",stringList);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{adminToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": {{name4}},\n    \"notifications\": \n        [{{notifications4}}]\n    ,\n    \"claims\": \n       [ {{claims4}}]\n    ,\n     \"organizationId\": {{orgId}},\n    \"type\": \"{{type4}}\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{userBaseURL}}/{{env}}/tpip/v2/group/organization/create",
					"protocol": "https",
					"host": [
						"{{userBaseURL}}"
					],
					"path": [
						"{{env}}",
						"tpip",
						"v2",
						"group",
						"organization",
						"create"
					]
				},
				"description": "This API uses to create organization group."
			},
			"response": []
		},
		{
			"name": "createSchemeGroup",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"check success message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"Group created successfully.\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 1100ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1100);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"check whether the group id is exists\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.content).to.have.property('groupId');\r",
							"});\r",
							"var issues = JSON.parse(responseBody);\r",
							"var schema = {\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
							"    \"$id\": \"http://example.com/example.json\",\r",
							"    \"type\": \"object\",\r",
							"    \"items\": [\r",
							"        {\r",
							"            \"result\": \"boolean\",\r",
							"            \"message\": \"string\",\r",
							"            \"content\": {\r",
							"                \"groupId\": \"integer\"\r",
							"            }\r",
							"        }\r",
							"    ],\r",
							"    \"type\": \"object\",\r",
							"    \"properties\": {\r",
							"        \"result\": {\r",
							"           \r",
							"            \"type\": \"boolean\",\r",
							"        },\r",
							"        \"message\": {\r",
							"           \r",
							"            \"type\": \"string\",\r",
							"            \"examples\": [\r",
							"                \"Group created successfully.\"\r",
							"            ]\r",
							"        },\r",
							"        \"content\": {\r",
							"            \"$id\": \"#/properties/content\",\r",
							"            \"type\": \"object\",\r",
							"           \r",
							"            \"examples\": [\r",
							"                {\r",
							"                    \"groupId\": 2485\r",
							"                }\r",
							"            ],\r",
							"            \"required\": [\r",
							"                \"groupId\"\r",
							"            ],\r",
							"            \"properties\": {\r",
							"                \"groupId\": {\r",
							"                    \"$id\": \"#/properties/content/properties/groupId\",\r",
							"                    \"type\": \"integer\",\r",
							"                    \"examples\": [\r",
							"                        2485\r",
							"                    ]\r",
							"                }\r",
							"            },\r",
							"            \"additionalProperties\": true\r",
							"        }\r",
							"    },\r",
							"    \"additionalProperties\": true\r",
							"}\r",
							"tests[\"Valid schema\"] = tv4.validate(issues, schema);\r",
							"//console.log(tv4.error);\r",
							"\r",
							"postman.setNextRequest(\"getOrganizationGroups\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"//pm.environment.set(\"name3\",\"\\\"\"+data.CreateSchName+\"\\\"\");\r",
							"pm.variables.set(\"name3\", \"\\\"\"+pm.variables.replaceIn('{{$randomWord}}')+\"\\\"\");\r",
							"//pm.variables.set(\"schemeId3\",\"\\\"\"+data.CreateSchId+\"\\\"\");\r",
							"pm.variables.set(\"schemeId3\",\"fdc127b0-2d84-11ec-951f-632acab2c87b\");\r",
							"pm.variables.set(\"claims3\",[\"cl-a-32\",\"cl-a-1\"]);\r",
							"var claimList3 = pm.variables.get(\"claims3\");\r",
							"var stringList = \"\";\r",
							"for(var i=0;i<claimList3.length;i++){\r",
							"    if(i==0){\r",
							"stringList= \"\\\"\"+claimList3[i]+\"\\\"\"\r",
							"    }else{\r",
							"stringList= \"\\\"\"+claimList3[i]+\"\\\",\"+stringList;\r",
							"    }\r",
							"}\r",
							"//console.log(stringList)\r",
							"pm.variables.set(\"claims3\",stringList);\r",
							"\r",
							"pm.variables.set(\"notifications3\",[\"N120\",\"N-R-32\"]);\r",
							"var notificationList3 = pm.variables.get(\"notifications3\");\r",
							"var stringList = \"\";\r",
							"for(var i=0;i<notificationList3.length;i++){\r",
							"    if(i==0){\r",
							"stringList= \"\\\"\"+notificationList3[i]+\"\\\"\"\r",
							"    }else{\r",
							"stringList= \"\\\"\"+notificationList3[i]+\"\\\",\"+stringList;\r",
							"    }\r",
							"}\r",
							"//console.log(stringList)\r",
							"pm.variables.set(\"notifications3\",stringList);\r",
							"\r",
							"pm.variables.set(\"schUserType\",\"client\");\r",
							"\r",
							"//postman.setNextRequest(\"getSchemeGroups\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{adminToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"notifications\": [\n        {{notifications3}}\n    ],\n    \"claims\": [\n        {{claims3}}\n    ],\n    \"name\": {{name3}},\n    \"schemeId\": \"{{schemeId3}}\",\n    \"userType\": \"{{schUserType}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{userBaseURL}}/{{env}}/tpip/v2/group/scheme/create",
					"protocol": "https",
					"host": [
						"{{userBaseURL}}"
					],
					"path": [
						"{{env}}",
						"tpip",
						"v2",
						"group",
						"scheme",
						"create"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				},
				"description": "This API uses to create scheme group."
			},
			"response": []
		},
		{
			"name": "getOrganizationGroups",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var OrganizationId = pm.variables.get(\"organizationId\");\r",
							"var OrganizationIdset = pm.variables.get(\"Org_Id\");\r",
							"if(OrganizationIdset.length>0){\r",
							"    postman.setNextRequest(pm.info.requestName);\r",
							"}else if(OrganizationIdset.length==0){\r",
							"    pm.variables.set(\"oIds\",  [1]);\r",
							"}\r",
							"pm.test(\"check success message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"Success.\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Success\");\r",
							"});\r",
							"pm.test(\"Response time is less than 900ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
							"});\r",
							"\r",
							"pm.test(\"check all requested data availabe\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    //var responseIDset = jsonData.content.organizationId;\r",
							"    var responseIDset = jsonData.content.map(d => d.organizationId);\r",
							"    //var requestedIds = [data.organizationId];\r",
							"    var requestedIds = [1];\r",
							"    var includevalue=true;\r",
							"    for(var i=0;i<requestedIds.length;i++){\r",
							"       if(!responseIDset.includes(requestedIds[i].toString())){\r",
							"           includevalue=false;\r",
							"           break;\r",
							"       }\r",
							"    }\r",
							"    pm.expect(includevalue).to.be.true;\r",
							"});\r",
							"\r",
							"var issues = JSON.parse(responseBody);\r",
							"var schema = {\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
							"    \"$id\": \"http://example.com/example.json\",\r",
							"    \"type\": \"object\",\r",
							"    \"properties\": [\r",
							"        {\r",
							"            \"result\": \"boolean\",\r",
							"            \"message\": \"string\",\r",
							"            \"content\": [\r",
							"                {\r",
							"                    \"type\" : [\"object\"],\r",
							"                    \"properties\" : {\r",
							"                    \"isDefaultGroup\": \"integer\",\r",
							"                    \"name\": \"string\",\r",
							"                    \"organizationId\": \"integer\",\r",
							"                    \"groupId\": \"integer\",\r",
							"                    \"claims\": [\r",
							"                        {\r",
							"                            \"claimId\": \"string\",\r",
							"                            \"title\": \"string\"\r",
							"                        }\r",
							"                    ],\r",
							"                    \"notifications\": [\r",
							"                        {\r",
							"                            \"code\": \"string\",\r",
							"                            \"title\": \"string\"\r",
							"                        }\r",
							"                    ],\r",
							"                    \"users\": [\r",
							"                        \"string\"\r",
							"                    ]\r",
							"                    }\r",
							"                },\r",
							"            ],\r",
							"                        \"required\": [\r",
							"                            \"isDefaultGroup\",\r",
							"                            \"name\",\r",
							"                            \"organizationId\",\r",
							"                            \"groupId\",\r",
							"                            \"claims\",\r",
							"                            \"notifications\",\r",
							"                            \"users\"\r",
							"                        ],\r",
							"                        \"properties\": {\r",
							"                            \"isDefaultGroup\": {\r",
							"                                \"$id\": \"#/properties/content/items/anyOf/0/properties/isDefaultGroup\",\r",
							"                                \"type\": \"integer\",\r",
							"                                \"examples\": [\r",
							"                                    1\r",
							"                                ]\r",
							"                            },\r",
							"                            \"name\": {\r",
							"                                \"$id\": \"#/properties/content/items/anyOf/0/properties/name\",\r",
							"                                \"type\": \"string\",\r",
							"                                \"examples\": [\r",
							"                                    \"Admin\"\r",
							"                                ]\r",
							"                            },\r",
							"                            \"organizationId\": {\r",
							"                                \"$id\": \"#/properties/content/items/anyOf/0/properties/organizationId\",\r",
							"                                \"type\": \"string\",\r",
							"                                \"examples\": [\r",
							"                                    \"1\"\r",
							"                                ]\r",
							"                            },\r",
							"                            \"groupId\": {\r",
							"                                \"$id\": \"#/properties/content/items/anyOf/0/properties/groupId\",\r",
							"                                \"type\": \"integer\",\r",
							"                                \"examples\": [\r",
							"                                    1\r",
							"                                ]\r",
							"                            },\r",
							"                            \"claims\": {\r",
							"                                \"$id\": \"#/properties/content/items/anyOf/0/properties/claims\",\r",
							"                                \"type\": \"array\",\r",
							"                                \"examples\": [\r",
							"                                    [\r",
							"                                        {\r",
							"                                            \"claimId\": \"cl-24\",\r",
							"                                            \"title\": \"Registration - Add LGIM users\"\r",
							"                                        },\r",
							"                                        {\r",
							"                                            \"claimId\": \"cl-28\",\r",
							"                                            \"title\": \"Registration - Add LGIM groups\"\r",
							"                                        }\r",
							"                                    ]\r",
							"                                ],\r",
							"                                \"additionalItems\": true,\r",
							"                                \"items\": {\r",
							"                                    \"$id\": \"#/properties/content/items/anyOf/0/properties/claims/items\",\r",
							"                                    \"anyOf\": [\r",
							"                                        {\r",
							"                                            \"$id\": \"#/properties/content/items/anyOf/0/properties/claims/items/anyOf/0\",\r",
							"                                            \"type\": \"object\",\r",
							"                                            \"examples\": [\r",
							"                                                {\r",
							"                                                    \"claimId\": \"cl-24\",\r",
							"                                                    \"title\": \"Registration - Add LGIM users\"\r",
							"                                                }\r",
							"                                            ],\r",
							"                                            \"required\": [\r",
							"                                                \"claimId\",\r",
							"                                                \"title\"\r",
							"                                            ],\r",
							"                                            \"properties\": {\r",
							"                                                \"claimId\": {\r",
							"                                                    \"$id\": \"#/properties/content/items/anyOf/0/properties/claims/items/anyOf/0/properties/claimId\",\r",
							"                                                    \"type\": \"string\",\r",
							"                                                    \"examples\": [\r",
							"                                                        \"cl-24\"\r",
							"                                                    ]\r",
							"                                                },\r",
							"                                                \"title\": {\r",
							"                                                    \"$id\": \"#/properties/content/items/anyOf/0/properties/claims/items/anyOf/0/properties/title\",\r",
							"                                                    \"type\": \"string\",\r",
							"                                                    \"examples\": [\r",
							"                                                        \"Registration - Add LGIM users\"\r",
							"                                                    ]\r",
							"                                                }\r",
							"                                            },\r",
							"                                            \"additionalProperties\": true\r",
							"                                        }\r",
							"                                    ]\r",
							"                                }\r",
							"                            },\r",
							"                            \"notifications\": {\r",
							"                                \"$id\": \"#/properties/content/items/anyOf/0/properties/notifications\",\r",
							"                                \"type\": \"array\",\r",
							"                                \"additionalItems\": true,\r",
							"                                \"items\": {\r",
							"                                    \"$id\": \"#/properties/content/items/anyOf/0/properties/notifications/items\"\r",
							"                                }\r",
							"                            },\r",
							"                            \"users\": {\r",
							"                                \"$id\": \"#/properties/content/items/anyOf/0/properties/users\",\r",
							"                                \"type\": \"array\",\r",
							"                                \"examples\": [\r",
							"                                    [\r",
							"                                        \"6e2a6680-0957-11ec-ace5-bd365af6b729\",\r",
							"                                        \"3b4f9c30-0966-11ec-af7c-996394d75682\"\r",
							"                                    ]\r",
							"                                ],\r",
							"                                \"additionalItems\": true,\r",
							"                                \"items\": {\r",
							"                                    \"$id\": \"#/properties/content/items/anyOf/0/properties/users/items\",\r",
							"                                    \"anyOf\": [\r",
							"                                        {\r",
							"                                            \"$id\": \"#/properties/content/items/anyOf/0/properties/users/items/anyOf/0\",\r",
							"                                            \"type\": \"string\",\r",
							"                                            \"examples\": [\r",
							"                                                \"6e2a6680-0957-11ec-ace5-bd365af6b729\",\r",
							"                                                \"3b4f9c30-0966-11ec-af7c-996394d75682\"\r",
							"                                            ]\r",
							"                                        }\r",
							"                                    ]\r",
							"                                }\r",
							"                            }\r",
							"                        },\r",
							"                        \"additionalProperties\": true\r",
							"                    }\r",
							"                ]\r",
							"            }\r",
							"tests[\"Valid schema\"] = tv4.validate(issues, schema);\r",
							"console.log(tv4.error);        \r",
							"    \r",
							"postman.setNextRequest(\"getSchemeGroups\");\r",
							"  \r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var oIds = pm.variables.get(\"Org_Id\")\r",
							"if(!oIds){\r",
							"    //oIds = data.organizationId\r",
							"    oIds = [1]\r",
							"}\r",
							"\r",
							"//console.log (data.organizationId);\r",
							"\r",
							"var currentOrgId = oIds.shift();\r",
							"pm.variables.set(\"organizationId\", currentOrgId);\r",
							"pm.variables.set(\"Org_Id\",oIds);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{adminToken}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://{{userBaseURL}}/{{env}}/tpip/v2/group/organization",
					"protocol": "https",
					"host": [
						"{{userBaseURL}}"
					],
					"path": [
						"{{env}}",
						"tpip",
						"v2",
						"group",
						"organization"
					],
					"query": [
						{
							"key": "organizationId",
							"value": "1",
							"disabled": true
						}
					]
				},
				"description": "This API uses to fetch organization groups by using organization id."
			},
			"response": []
		},
		{
			"name": "getSchemeGroups",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var SchemeId = pm.variables.get(\"schemeId\");\r",
							"var SchemeIdset = pm.variables.get(\"Scheme_Id\");\r",
							"if(SchemeIdset.length>0){\r",
							"    postman.setNextRequest(pm.info.requestName);\r",
							"}else if(SchemeIdset.length==0){\r",
							"    pm.variables.set(\"Ids\", [\"fdc127b0-2d84-11ec-951f-632acab2c87b\"]);\r",
							"}\r",
							"\r",
							"pm.test(\"check success message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"Success.\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"check all requested data availabe\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var responseIDset = jsonData.content.map(d => d.schemeId);\r",
							"    //var requestedIds = data.schemeIds;\r",
							"    var requestedIds = [\"fdc127b0-2d84-11ec-951f-632acab2c87b\"];\r",
							"    var includevalue=true;\r",
							"    //var noOfGroups = (jsonData.content).length; \r",
							"     for(var i=0;i<requestedIds.length;i++){\r",
							"       if(!responseIDset.includes(requestedIds[i].toString())){\r",
							"           includevalue=false;\r",
							"           break;\r",
							"       }\r",
							"    }\r",
							"    pm.expect(includevalue).to.be.true;\r",
							"});\r",
							"\r",
							"var issues = JSON.parse(responseBody);\r",
							"var schema = {\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
							"    \"$id\": \"http://example.com/example.json\",\r",
							"    \"type\": \"object\",\r",
							"    \"properties\": [\r",
							"        {\r",
							"            \"result\": \"boolean\",\r",
							"            \"message\": \"string\",\r",
							"            \"content\": [\r",
							"                {\r",
							"                    \"type\" : [\"object\"],\r",
							"                    \"isDefaultGroup\": \"integer\",\r",
							"                    \"name\": \"string\",\r",
							"                    \"schemeId\": \"string\",\r",
							"                    \"associatedRole\": \"string\",\r",
							"                    \"groupId\": \"integer\",\r",
							"                    \"claims\": [\r",
							"                        {\r",
							"                            \"claimId\": \"string\",\r",
							"                            \"title\": \"string\"\r",
							"                        }\r",
							"                        \r",
							"                    ],\r",
							"                    \"notifications\": [\r",
							"                        {\r",
							"                            \"code\": \"string\",\r",
							"                            \"title\": \"string\"\r",
							"                        }\r",
							"                        \r",
							"                    ],\r",
							"                    \"users\": [\r",
							"                        \"string\"\r",
							"                    ]\r",
							"                },\r",
							"              \r",
							"    ],\r",
							"    \"required\": [\r",
							"        \"result\",\r",
							"        \"message\",\r",
							"        \"content\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"result\": {\r",
							"            \"$id\": \"#/properties/result\",\r",
							"            \"type\": \"boolean\",\r",
							"            \"examples\": [\r",
							"                true\r",
							"            ]\r",
							"        },\r",
							"        \"message\": {\r",
							"            \"$id\": \"#/properties/message\",\r",
							"            \"type\": \"string\",\r",
							"            \"examples\": [\r",
							"                \"Success.\"\r",
							"            ]\r",
							"        },\r",
							"        \"content\": {\r",
							"            \"$id\": \"#/properties/content\",\r",
							"            \"type\": \"array\",\r",
							"          \r",
							"            \"additionalItems\": true,\r",
							"            \"items\": {\r",
							"                \"$id\": \"#/properties/content/items\",\r",
							"                \"anyOf\": [\r",
							"                    {\r",
							"                        \"$id\": \"#/properties/content/items/anyOf/0\",\r",
							"                        \"type\": \"object\",\r",
							"                      \r",
							"                        \"required\": [\r",
							"                            \"isDefaultGroup\",\r",
							"                            \"name\",\r",
							"                            \"schemeId\",\r",
							"                            \"associatedRole\",\r",
							"                            \"groupId\",\r",
							"                            \"claims\",\r",
							"                            \"notifications\",\r",
							"                            \"users\"\r",
							"                        ],\r",
							"                        \"properties\": {\r",
							"                            \"isDefaultGroup\": {\r",
							"                                \"$id\": \"#/properties/content/items/anyOf/0/properties/isDefaultGroup\",\r",
							"                                \"type\": \"integer\",\r",
							"                               \r",
							"                            },\r",
							"                            \"name\": {\r",
							"                                \"$id\": \"#/properties/content/items/anyOf/0/properties/name\",\r",
							"                                \"type\": \"string\",\r",
							"                            \r",
							"                            },\r",
							"                            \"schemeId\": {\r",
							"                                \"$id\": \"#/properties/content/items/anyOf/0/properties/schemeId\",\r",
							"                                \"type\": \"string\",\r",
							"                               \r",
							"                            },\r",
							"                            \"associatedRole\": {\r",
							"                                \"$id\": \"#/properties/content/items/anyOf/0/properties/associatedRole\",\r",
							"                                \"type\": \"string\",\r",
							"                              \r",
							"                            },\r",
							"                            \"groupId\": {\r",
							"                                \"$id\": \"#/properties/content/items/anyOf/0/properties/groupId\",\r",
							"                                \"type\": \"integer\",\r",
							"                             \r",
							"                            },\r",
							"                            \"claims\": {\r",
							"                                \"$id\": \"#/properties/content/items/anyOf/0/properties/claims\",\r",
							"                                \"type\": \"array\",\r",
							"                                \"title\": \"The claims schema\",\r",
							"                                \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                                \"default\": [],\r",
							"                                \r",
							"                                \"additionalItems\": true,\r",
							"                                \"items\": {\r",
							"                                    \"$id\": \"#/properties/content/items/anyOf/0/properties/claims/items\",\r",
							"                                    \"anyOf\": [\r",
							"                                        {\r",
							"                                            \"$id\": \"#/properties/content/items/anyOf/0/properties/claims/items/anyOf/0\",\r",
							"                                            \"type\": \"object\",\r",
							"                                            \"title\": \"The first anyOf schema\",\r",
							"                                            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                                            \"default\": {},\r",
							"                                           \r",
							"                                            \"required\": [\r",
							"                                                \"claimId\",\r",
							"                                                \"title\"\r",
							"                                            ],\r",
							"                                            \"properties\": {\r",
							"                                                \"claimId\": {\r",
							"                                                    \"$id\": \"#/properties/content/items/anyOf/0/properties/claims/items/anyOf/0/properties/claimId\",\r",
							"                                                    \"type\": \"string\",\r",
							"                                                    \r",
							"                                                },\r",
							"                                                \"title\": {\r",
							"                                                    \"$id\": \"#/properties/content/items/anyOf/0/properties/claims/items/anyOf/0/properties/title\",\r",
							"                                                    \"type\": \"string\",\r",
							"                                                    \r",
							"                                                }\r",
							"                                            },\r",
							"                                            \"additionalProperties\": true\r",
							"                                        }\r",
							"                                    ]\r",
							"                                }\r",
							"                            },\r",
							"                            \"notifications\": {\r",
							"                                \"$id\": \"#/properties/content/items/anyOf/0/properties/notifications\",\r",
							"                                \"type\": \"array\",\r",
							"                               \r",
							"                                \r",
							"                                \"additionalItems\": true,\r",
							"                                \"items\": {\r",
							"                                    \"$id\": \"#/properties/content/items/anyOf/0/properties/notifications/items\",\r",
							"                                    \"anyOf\": [\r",
							"                                        {\r",
							"                                            \"$id\": \"#/properties/content/items/anyOf/0/properties/notifications/items/anyOf/0\",\r",
							"                                            \"type\": \"object\",\r",
							"                                           \r",
							"                                            \"required\": [\r",
							"                                                \"code\",\r",
							"                                                \"title\"\r",
							"                                            ],\r",
							"                                            \"properties\": {\r",
							"                                                \"code\": {\r",
							"                                                    \"$id\": \"#/properties/content/items/anyOf/0/properties/notifications/items/anyOf/0/properties/code\",\r",
							"                                                    \"type\": \"string\",\r",
							"                                                   \r",
							"                                                },\r",
							"                                                \"title\": {\r",
							"                                                    \"$id\": \"#/properties/content/items/anyOf/0/properties/notifications/items/anyOf/0/properties/title\",\r",
							"                                                    \"type\": \"string\",\r",
							"                                                    \r",
							"                                                }\r",
							"                                            },\r",
							"                                            \"additionalProperties\": true\r",
							"                                        }\r",
							"                                    ]\r",
							"                                }\r",
							"                            },\r",
							"                            \"users\": {\r",
							"                                \"$id\": \"#/properties/content/items/anyOf/0/properties/users\",\r",
							"                                \"type\": \"array\",\r",
							"                               \r",
							"                                \r",
							"                                \"additionalItems\": true,\r",
							"                                \"items\": {\r",
							"                                    \"$id\": \"#/properties/content/items/anyOf/0/properties/users/items\",\r",
							"                                    \"anyOf\": [\r",
							"                                        {\r",
							"                                            \"$id\": \"#/properties/content/items/anyOf/0/properties/users/items/anyOf/0\",\r",
							"                                            \"type\": \"string\",\r",
							"                                           \r",
							"                                        }\r",
							"                                    ]\r",
							"                                }\r",
							"                            }\r",
							"                        },\r",
							"                        \"additionalProperties\": true\r",
							"                    }\r",
							"                ]\r",
							"            }\r",
							"        }\r",
							"    },\r",
							"    \"additionalProperties\": true\r",
							"}\r",
							"    ]\r",
							"}\r",
							"\r",
							"tests[\"Valid schema\"] = tv4.validate(issues, schema);\r",
							"//console.log(tv4.error);        \r",
							"    "
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var Ids = pm.variables.get(\"Scheme_Id\")\r",
							"if(!Ids){\r",
							"    Ids = [\"fdc127b0-2d84-11ec-951f-632acab2c87b\"];\r",
							"}\r",
							"\r",
							"var currentSchemeId = Ids.shift();\r",
							"pm.variables.set(\"schemeId\", currentSchemeId);\r",
							"pm.variables.set(\"Scheme_Id\", Ids);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://{{userBaseURL}}/{{env}}/tpip/v2/group/scheme?schemeId={{schemeId}}",
					"protocol": "https",
					"host": [
						"{{userBaseURL}}"
					],
					"path": [
						"{{env}}",
						"tpip",
						"v2",
						"group",
						"scheme"
					],
					"query": [
						{
							"key": "schemeId",
							"value": "{{schemeId}}"
						}
					]
				},
				"description": "This API uses to fetch groups of a scheme."
			},
			"response": []
		}
	]
}